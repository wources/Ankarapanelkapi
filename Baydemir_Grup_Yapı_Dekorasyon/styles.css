/* Base Styles */
:root {
  --iceblue-50: #f0f7fa;
  --iceblue-100: #e1eff5;
  --iceblue-200: #c3e0eb;
  --iceblue-300: #a4d0e0;
  --iceblue-400: #86c0d5;
  --iceblue-500: #67b0ca;
  --iceblue-600: #4a8da3;
  --iceblue-700: #376a7c;
  --iceblue-800: #244754;
  --iceblue-900: #12232d;

  --background: #f8fafc;
  --foreground: #1e293b;
  --primary: #3b82f6;
  --primary-foreground: #ffffff;
  --secondary: #f1f5f9;
  --secondary-foreground: #1e293b;
  --muted: #f1f5f9;
  --muted-foreground: #64748b;
  --accent: #f1f5f9;
  --accent-foreground: #1e293b;
  --border: #e2e8f0;

  --radius: 0.5rem;
  --font-sans: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-sans);
  background-color: var(--background);
  color: var(--foreground);
  line-height: 1.5;
}


/* whatsapp starts*/
.hidden {
  display: none;
}

.sticky-button {
  position: fixed;
  background-color: #25d366;
  bottom: 20px;
  right: 20px;
  border-radius: 50px;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);
  z-index: 20;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 55px;
  height: 55px;
  -webkit-transition: all 0.2s ease-out;
  transition: all 0.2s ease-out;
}

.sticky-button svg {
  margin: auto;
  fill: #fff;
  width: 35px;
  height: 35px;
}

.sticky-button a,
.sticky-button label {
  cursor: pointer;
  display: flex;
  align-items: center;
  width: 55px;
  height: 55px;
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
}

.sticky-button label svg.close-icon {
  display: none;
}

.sticky-chat {
  position: fixed;
  bottom: 70px;
  right: 20px;
  width: 320px;
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
  z-index: 21;
  opacity: 0;
  visibility: hidden;
}

.sticky-chat a {
  text-decoration: none;
  font-family: "Roboto", sans-serif;
  color: #505050;
}

.sticky-chat svg {
  width: 35px;
  height: 35px;
}

.sticky-chat .chat-content {
  border-radius: 10px;
  background-color: #fff;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);
  overflow: hidden;
  font-family: "Roboto", sans-serif;
  font-weight: 400;
}

.sticky-chat .chat-header {
  position: relative;
  display: flex;
  align-items: center;
  padding: 15px 20px;
  background-color: #25d366;
  overflow: hidden;
}

.sticky-chat .chat-header:after {
  content: "";
  display: block;
  position: absolute;
  bottom: 0;
  right: 0;
  width: 80px;
  height: 75px;
  background: rgba(0, 0, 0, 0.04);
  border-radius: 70px 0 5px 0;
}

.sticky-chat .chat-header svg {
  width: 35px;
  height: 35px;
  flex: 0 0 auto;
  fill: #fff;
}

.sticky-chat .chat-header .title {
  padding-left: 15px;
  font-size: 14px;
  font-weight: 600;
  font-family: "Roboto", sans-serif;
  color: #fff;
}

.sticky-chat .chat-header .title span {
  font-size: 11px;
  font-weight: 400;
  display: block;
  line-height: 1.58em;
  margin: 0;
  color: #f4f4f4;
}

.sticky-chat .chat-text {
  display: flex;
  flex-wrap: wrap;
  margin: 30px 20px;
  font-size: 12px;
}

.sticky-chat .chat-text span {
  display: inline-block;
  margin-right: auto;
  padding: 10px;
  background-color: #f0f5fb;
  border-radius: 0px 15px 15px;
}

.sticky-chat .chat-text span:after {
  content: "ÅŸimdi";
  display: inline-block;
  margin-left: 2px;
  font-size: 9px;
  color: #989b9f;
}

.sticky-chat .chat-text span.typing {
  margin: 15px 0 0 auto;
  padding: 10px;
  border-radius: 15px 0px 15px 15px;
}

.sticky-chat .chat-text span.typing:after {
  display: none;
}

.sticky-chat .chat-text span.typing svg {
  height: 13px;
  fill: #505050;
}

.sticky-chat .chat-button {
  display: flex;
  align-items: center;
  margin-top: 15px;
  padding: 12px 20px;
  border-radius: 10px;
  background-color: #fff;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);
  overflow: hidden;
  font-size: 12px;
  font-family: "Roboto", sans-serif;
  font-weight: 400;
}

.sticky-chat .chat-button svg {
  width: 20px;
  height: 20px;
  fill: #505050;
  margin-left: auto;
  transform: rotate(40deg);
  -webkit-transform: rotate(40deg);
}

.chat-menu:checked + .sticky-button label {
  -webkit-transform: rotate(360deg);
  transform: rotate(360deg);
}

.chat-menu:checked + .sticky-button label svg.chat-icon {
  display: none;
}

.chat-menu:checked + .sticky-button label svg.close-icon {
  display: table-cell;
}

.chat-menu:checked + .sticky-button + .sticky-chat {
  bottom: 90px;
  opacity: 1;
  visibility: visible;
}

/* whatsapp ends*/
img {
  max-width: 100%;
  height: auto;
}

a {
  color: inherit;
  text-decoration: none;
}

ul {
  list-style: none;
}

.container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 2rem;
}

/* Button Styles */
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius);
  font-weight: 500;
  padding: 0.5rem 1rem;
  transition: all 0.3s ease;
  cursor: pointer;
}

.button.primary {
  background-color: var(--iceblue-500);
  color: white;
}

.button.primary:hover {
  background-color: var(--iceblue-600);
}

.button.secondary {
  background-color: white;
  color: var(--iceblue-700);
}

.button.secondary:hover {
  background-color: var(--iceblue-50);
}

.button.outline {
  background-color: transparent;
  border: 1px solid var(--iceblue-200);
}

.button.outline:hover {
  background-color: var(--iceblue-50);
}

.button.outline.light {
  border-color: rgba(255, 255, 255, 0.2);
  color: white;
}

.button.outline.light:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.button.full-width {
  width: 100%;
}

/* Header Styles */
.navbar {
  position: sticky;
  top: 0;
  z-index: 40;
  transition: all 0.3s ease;
  background-color: transparent;
}

.navbar.scrolled {
  background-color: rgba(248, 250, 252, 0.95);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  backdrop-filter: blur(10px);
}

.navbar .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 4rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.logo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.logo img {
  border-radius: var(--radius);
}

.logo span {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--iceblue-800);
}

.desktop-nav {
  display: none;
}

@media (min-width: 768px) {
  .desktop-nav {
    display: flex;
    gap: 1.5rem;
  }
}

.desktop-nav a {
  font-size: 0.875rem;
  font-weight: 500;
  transition: color 0.3s ease;
}

.desktop-nav a:hover {
  color: var(--iceblue-600);
}

.header-cta {
  display: none;
}

@media (min-width: 768px) {
  .header-cta {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
}

/* Mobile Menu */
.mobile-menu-button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.5rem;
}

@media (min-width: 768px) {
  .mobile-menu-button {
    display: none;
  }
}

.mobile-menu {
  position: fixed;
  top: 0;
  left: 0;
  width: 300px;
  height: 100vh;
  background-color: white;
  z-index: 50;
  transform: translateX(-100%);
  transition: transform 0.3s ease;
  box-shadow: 4px 0 10px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
}

.mobile-menu.active {
  transform: translateX(0);
}

.mobile-menu-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  border-bottom: 1px solid var(--iceblue-100);
}

.mobile-menu-header span {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--iceblue-800);
}

.mobile-menu-header button {
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.5rem;
}

.mobile-nav {
  display: flex;
  flex-direction: column;
  padding: 2rem 1rem;
  gap: 1rem;
}

.mobile-nav a {
  padding: 0.75rem 1rem;
  font-size: 1.125rem;
  font-weight: 500;
  color: var(--iceblue-800);
  border-radius: var(--radius);
  transition: background-color 0.3s ease;
}

.mobile-nav a:hover {
  background-color: var(--iceblue-50);
}

.mobile-cta {
  margin-top: auto;
  padding: 1rem;
  border-top: 1px solid var(--iceblue-100);
}

.mobile-cta .button {
  width: 100%;
}

/* Hero Section */
.hero {
  position: relative;
  padding: 6rem 0;
}

@media (min-width: 768px) {
  .hero {
    padding: 8rem 0;
  }
}

@media (min-width: 1024px) {
  .hero {
    padding: 10rem 0;
  }
}

.hero-background {
  position: absolute;
  inset: 0;
  z-index: -1;
}

.hero-background img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: brightness(0.9);
}

.hero-content {
  max-width: 42rem;
  color: white;
}

.hero-content h1 {
  font-size: 2.5rem;
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 1.5rem;
}

@media (min-width: 640px) {
  .hero-content h1 {
    font-size: 3rem;
  }
}

@media (min-width: 768px) {
  .hero-content h1 {
    font-size: 3.75rem;
  }
}

.hero-content p {
  font-size: 1.125rem;
  margin-bottom: 1.5rem;
}

@media (min-width: 768px) {
  .hero-content p {
    font-size: 1.25rem;
  }
}

.hero-buttons {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

@media (min-width: 640px) {
  .hero-buttons {
    flex-direction: row;
  }
}

/* Section Styles */
section {
  padding: 4rem 0;
}

@media (min-width: 768px) {
  section {
    padding: 6rem 0;
  }
}

.section-header {
  text-align: center;
  margin-bottom: 3rem;
}

.section-header h2 {
  font-size: 2rem;
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 1rem;
  color: var(--iceblue-800);
}

@media (min-width: 640px) {
  .section-header h2 {
    font-size: 2.5rem;
  }
}

.section-header p {
  max-width: 42rem;
  margin: 0 auto;
  color: var(--iceblue-600);
}

.section-cta {
  text-align: center;
  margin-top: 3rem;
}

/* Features Section */
.features {
  background-color: var(--iceblue-50);
}

.features-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 768px) {
  .features-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .features-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

.feature-card {
  background-color: white;
  padding: 1.5rem;
  border-radius: var(--radius);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.feature-card i {
  font-size: 3rem;
  color: var(--iceblue-500);
  margin-bottom: 1rem;
}

.feature-card h3 {
  font-size: 1.25rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  color: var(--iceblue-800);
}

.feature-card p {
  color: var(--iceblue-600);
}

/* Products Section */
.product-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 768px) {
  .product-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .product-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

.product-card {
  position: relative;
  border-radius: var(--radius);
  overflow: hidden;
  cursor: pointer;
}

.product-card img {
  width: 100%;
  aspect-ratio: 1 / 1;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.product-card:hover img {
  transform: scale(1.05);
}

.product-overlay {
  position: absolute;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.product-card:hover .product-overlay {
  opacity: 1;
}

.view-button {
  background-color: rgba(255, 255, 255, 0.8);
  color: var(--iceblue-800);
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 500;
}

/* Lightbox */
.lightbox {
  position: fixed;
  inset: 0;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

.lightbox.active {
  opacity: 1;
  pointer-events: auto;
}

.lightbox-content {
  position: relative;
  max-width: 90%;
  max-height: 90%;
}

.lightbox-close {
  position: absolute;
  top: -2rem;
  right: -2rem;
  background: transparent;
  border: none;
  color: white;
  font-size: 2rem;
  cursor: pointer;
}

.lightbox-prev,
.lightbox-next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.2);
  color: white;
  border: none;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.lightbox-prev:hover,
.lightbox-next:hover {
  background-color: rgba(0, 0, 0, 0.4);
}

.lightbox-prev {
  left: 1rem;
}

.lightbox-next {
  right: 1rem;
}

/* Vertical Photo Changer Styles */
.vertical-photo-changer {
  margin: 2rem 0;
}

.photo-display {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

@media (min-width: 768px) {
  .photo-display {
    flex-direction: row;
  }
}

.main-photo-container {
  flex: 1;
  position: relative;
  border-radius: var(--radius);
  overflow: hidden;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.main-photo-container img {
  width: 100%;
  height: 300px;
  object-fit: cover;
  display: block;
}

@media (min-width: 768px) {
  .main-photo-container img {
    height: 400px;
  }
}

@media (min-width: 1024px) {
  .main-photo-container img {
    height: 500px;
  }
}

.photo-description {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 1rem;
}

.photo-description h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.photo-description p {
  font-size: 0.875rem;
  opacity: 0.9;
}

.photo-navigation {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
}

@media (min-width: 768px) {
  .photo-navigation {
    flex-direction: column;
    width: 200px;
  }
}

.nav-button {
  background-color: var(--iceblue-500);
  color: white;
  border: none;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
  flex-shrink: 0;
}

.nav-button:hover {
  background-color: var(--iceblue-600);
}

.photo-thumbnails {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  overflow-x: auto;
  padding: 0.5rem;
  max-width: calc(100% - 5.5rem);
}

@media (min-width: 768px) {
  .photo-thumbnails {
    flex-direction: column;
    max-height: 400px;
    overflow-y: auto;
    overflow-x: hidden;
    max-width: none;
  }
}

.thumbnail {
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
  opacity: 0.7;
  transition: opacity 0.3s ease;
  flex-shrink: 0;
  width: 80px;
  text-align: center;
}

.thumbnail:hover {
  opacity: 1;
}

.thumbnail.active {
  opacity: 1;
  position: relative;
}

.thumbnail.active::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  width: 8px;
  height: 8px;
  background-color: var(--iceblue-500);
  border-radius: 50%;
}

@media (min-width: 768px) {
  .thumbnail.active::after {
    left: -5px;
    top: 50%;
    transform: translateY(-50%);
  }
}

.thumbnail img {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border-radius: var(--radius);
  margin-bottom: 0.25rem;
}

.thumbnail span {
  font-size: 0.75rem;
  color: var(--iceblue-700);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

/* Hide the photo data container */
.photo-data {
  display: none;
}
/* Process Section */
.process-steps {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 768px) {
  .process-steps {
    grid-template-columns: repeat(4, 1fr);
  }
}

.process-step {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.step-number {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: var(--iceblue-500);
  color: white;
  font-size: 1.25rem;
  font-weight: 700;
  margin-bottom: 1rem;
}

.process-step h3 {
  font-size: 1.25rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  color: var(--iceblue-800);
}

.process-step p {
  color: var(--iceblue-600);
}

.step-connector {
  display: none;
}

@media (min-width: 768px) {
  .step-connector {
    display: block;
    position: absolute;
    top: 1.5rem;
    left: calc(50% + 2rem);
    right: calc(50% - 2rem);
    height: 2px;
    background-color: var(--iceblue-300);
  }
}

/* Testimonials Section */
.testimonials {
  background-color: var(--iceblue-50);
}

.testimonials-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 768px) {
  .testimonials-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

.testimonial-card {
  background-color: white;
  padding: 1.5rem;
  border-radius: var(--radius);
  border: 1px solid var(--iceblue-100);
  display: flex;
  flex-direction: column;
  height: 100%;
}

.stars {
  margin-bottom: 1rem;
  color: #f59e0b;
}

.testimonial-card blockquote {
  flex: 1;
  margin-bottom: 1rem;
}

.testimonial-card blockquote p {
  font-style: italic;
  color: var(--iceblue-700);
}

.testimonial-author {
  margin-top: auto;
}

.author-name {
  font-weight: 600;
  color: var(--iceblue-800);
}

.author-role {
  font-size: 0.875rem;
  color: var(--iceblue-600);
}

/* CTA Section */
.cta {
  background-color: var(--iceblue-600);
  color: white;
}

.cta-content {
  max-width: 48rem;
  margin: 0 auto;
  text-align: center;
}

.cta-content h2 {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
}

.cta-content p {
  color: var(--iceblue-100);
  font-size: 1.125rem;
  margin-bottom: 1.5rem;
}

.cta-buttons {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: center;
}

@media (min-width: 640px) {
  .cta-buttons {
    flex-direction: row;
  }
}

/* Contact Section */
.contact-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
}

@media (min-width: 768px) {
  .contact-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

.contact-info h2 {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
  color: var(--iceblue-800);
}

.contact-info > p {
  color: var(--iceblue-600);
  margin-bottom: 2rem;
}

.contact-details {
  margin-bottom: 2rem;
}

.contact-item {
  display: flex;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.contact-item i {
  color: var(--iceblue-500);
  margin-right: 0.75rem;
  margin-top: 0.125rem;
}

.contact-item h3 {
  font-weight: 500;
  color: var(--iceblue-800);
}

.contact-item p {
  color: var(--iceblue-600);
}

.working-hours h3 {
  font-weight: 500;
  color: var(--iceblue-800);
  margin-bottom: 1rem;
}

.hours-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.5rem;
  font-size: 0.875rem;
  color: var(--iceblue-700);
}

.contact-form-container {
  background-color: var(--iceblue-50);
  padding: 1.5rem;
  border-radius: var(--radius);
  border: 1px solid var(--iceblue-100);
}

.contact-form-container h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: var(--iceblue-800);
}

.form-row {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

@media (min-width: 640px) {
  .form-row {
    grid-template-columns: repeat(2, 1fr);
  }
}

.form-group {
  margin-bottom: 1rem;
}

.form-group label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  color: var(--iceblue-700);
}

.form-group input,
.form-group select,
.form-group textarea {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--iceblue-200);
  border-radius: var(--radius);
  background-color: white;
  font-size: 0.875rem;
  transition: all 0.3s ease;
}

.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
  outline: none;
  border-color: var(--iceblue-500);
  box-shadow: 0 0 0 2px rgba(103, 176, 202, 0.2);
}

/* Footer */
footer {
  background-color: var(--iceblue-50);
  border-top: 1px solid var(--iceblue-100);
  padding: 3rem 0;
}

.footer-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 768px) {
  .footer-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

.footer-about {
  margin-bottom: 2rem;
}

.footer-logo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.footer-logo img {
  border-radius: var(--radius);
}

.footer-logo span {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--iceblue-800);
}

.footer-about p {
  font-size: 0.875rem;
  color: var(--iceblue-600);
  margin-bottom: 1rem;
}

.social-links {
  display: flex;
  gap: 1rem;
}

.social-links a {
  color: var(--iceblue-500);
  transition: color 0.3s ease;
}

.social-links a:hover {
  color: var(--iceblue-700);
}

.footer-links h3 {
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: 1rem;
  color: var(--iceblue-800);
}

.footer-links ul {
  font-size: 0.875rem;
}

.footer-links li {
  margin-bottom: 0.5rem;
}

.footer-links a {
  color: var(--iceblue-600);
  transition: color 0.3s ease;
}

.footer-links a:hover {
  color: var(--iceblue-700);
}

.footer-bottom {
  margin-top: 3rem;
  padding-top: 2rem;
  border-top: 1px solid var(--iceblue-200);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

@media (min-width: 768px) {
  .footer-bottom {
    flex-direction: row;
    justify-content: space-between;
  }
}

.footer-bottom p {
  font-size: 0.875rem;
  color: var(--iceblue-600);
}

.footer-legal {
  display: flex;
  gap: 1rem;
  font-size: 0.875rem;
}

.footer-legal a {
  color: var(--iceblue-600);
  transition: color 0.3s ease;
}

.footer-legal a:hover {
  color: var(--iceblue-700);
}

/* Animation Classes */
.reveal {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.reveal.active {
  opacity: 1;
  transform: translateY(0);
}

.reveal-left {
  opacity: 0;
  transform: translateX(-20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.reveal-left.active {
  opacity: 1;
  transform: translateX(0);
}

.reveal-right {
  opacity: 0;
  transform: translateX(20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.reveal-right.active {
  opacity: 1;
  transform: translateX(0);
}

/* Loading Animation */
.loading-overlay {
  position: fixed;
  inset: 0;
  z-index: 100;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(128, 128, 128, 0.8);
  transition: opacity 0.5s ease;
}

.loading-overlay.hidden {
  opacity: 0;
  pointer-events: none;
}

.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.door-frame {
  position: relative;
  width: 10rem;
  height: 10rem;
  border: 8px solid #9ca3af;
  border-bottom: none;
  border-radius: 0.75rem 0.75rem 0 0;
}

.door {
  position: absolute;
  top: 0;
  height: 100%;
  width: 50%;
  background-color: #000;
  transition: transform 1.5s ease-in-out;
}

.left-door {
  left: 0;
  transform-origin: left;
  border-top-left-radius: 0.5rem;
}

.right-door {
  right: 0;
  transform-origin: right;
  border-top-right-radius: 0.5rem;
}

.door.open.left-door {
  transform: rotateY(85deg);
}

.door.open.right-door {
  transform: rotateY(-85deg);
}

.progress-circle {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

.progress {
  stroke-dasharray: 283;
  stroke-dashoffset: 283;
  transform: rotate(-90deg);
  transform-origin: center;
  transition: stroke-dashoffset 0.2s ease;
}

.loading-text {
  margin-top: 1rem;
  color: #4b5563;
  font-weight: 500;
}

/* Gallery Page Styles */

/* Gallery Hero Section */
.gallery-hero {
  background-color: var(--iceblue-600);
  color: white;
  padding: 6rem 0 4rem;
  text-align: center;
}

.gallery-hero-content h1 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 1rem;
}

.gallery-hero-content p {
  max-width: 42rem;
  margin: 0 auto;
  font-size: 1.125rem;
}

/* Gallery Filter */
.gallery-filter {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 2rem;
  padding: 1rem 0;
}

.filter-button {
  background-color: var(--iceblue-50);
  border: 1px solid var(--iceblue-200);
  color: var(--iceblue-700);
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
}

.filter-button:hover {
  background-color: var(--iceblue-100);
}

.filter-button.active {
  background-color: var(--iceblue-500);
  color: white;
  border-color: var(--iceblue-500);
}

/* Gallery Grid */
.gallery-section {
  padding: 4rem 0;
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 1.5rem;
}

@media (min-width: 640px) {
  .gallery-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .gallery-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Gallery Items */
.gallery-item {
  opacity: 1;
  transform: scale(1);
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.gallery-item.hidden {
  opacity: 0;
  transform: scale(0.8);
  position: absolute;
  pointer-events: none;
}

.gallery-image-wrapper {
  position: relative;
  overflow: hidden;
  border-radius: var(--radius);
  aspect-ratio: 3/2;
  cursor: pointer;
}

.gallery-image-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.gallery-image-wrapper:hover img {
  transform: scale(1.05);
}

.gallery-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0) 60%);
  display: flex;
  align-items: flex-end;
  padding: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gallery-image-wrapper:hover .gallery-overlay {
  opacity: 1;
}

.gallery-info {
  color: white;
}

.gallery-info h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.25rem;
}

.gallery-info p {
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
  opacity: 0.9;
}

.gallery-category {
  display: inline-block;
  font-size: 0.75rem;
  background-color: rgba(255, 255, 255, 0.2);
  padding: 0.25rem 0.5rem;
  border-radius: 9999px;
}

/* Gallery Lightbox */
.lightbox-caption {
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 1rem;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  transform: translateY(100%);
  transition: transform 0.3s ease;
}

.lightbox.active .lightbox-caption {
  transform: translateY(0);
}

.lightbox-caption h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.lightbox-caption p {
  font-size: 0.875rem;
  opacity: 0.9;
}

/* Gallery CTA */
.gallery-cta {
  text-align: center;
  margin-top: 3rem;
}

/* Active nav link */
.desktop-nav a.active,
.mobile-nav a.active {
  color: var(--iceblue-500);
  font-weight: 600;
}
/* Zoom and Pan Functionality */
.lightbox-content {
  position: relative;
  max-width: 90vw;
  max-height: 90vh;
  margin: 0 auto;
  overflow: hidden;
}

.lightbox-image-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

#lightbox-image {
  max-width: 100%;
  max-height: 80vh;
  object-fit: contain;
  transition: transform 0.3s ease;
  transform-origin: center;
  cursor: zoom-in;
}

#lightbox-image.zoomed {
  cursor: grab;
}

#lightbox-image.zoomed:active {
  cursor: grabbing;
}

.zoom-controls {
  position: absolute;
  top: 15px;
  right: 60px;
  display: flex;
  gap: 10px;
  z-index: 1001;
}

.zoom-button {
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.zoom-button:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

.zoom-level {
  position: absolute;
  bottom: 70px;
  right: 15px;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 5px 10px;
  border-radius: 15px;
  font-size: 0.8rem;
  z-index: 1001;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.zoom-level.visible {
  opacity: 1;
}

.zoom-instructions {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 15px 20px;
  border-radius: 10px;
  text-align: center;
  z-index: 1002;
  opacity: 0;
  transition: opacity 0.5s ease, transform 0.5s ease;
  pointer-events: none;
}

.zoom-instructions.visible {
  opacity: 1;
  animation: fadeOut 3s forwards;
  animation-delay: 2s;
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

/* Ensure lightbox caption doesn't overlap with zoomed image */
.lightbox.zoomed-mode .lightbox-caption {
  opacity: 0.5;
  transform: translateY(0);
}

/* Mobile optimizations for zoom functionality */
@media (max-width: 768px) {
  .zoom-controls {
    top: 10px;
    right: 50px;
  }
  
  .zoom-button {
    width: 35px;
    height: 35px;
  }
  
  .zoom-level {
    bottom: 60px;
  }
}

## 3. JavaScript File (script.js)

```javascript project="Door Maker Landing Page" file="script.js" type="code"
document.addEventListener("DOMContentLoaded", () => {
  // Set current year in footer
  document.getElementById('current-year').textContent = new Date().getFullYear();
  
  // ===== Navbar scroll effect =====
  const navbar = document.querySelector(".navbar");

  function handleScroll() {
    if (window.scrollY > 10) {
      navbar.classList.add("scrolled");
    } else {
      navbar.classList.remove("scrolled");
    }
  }

  window.addEventListener("scroll", handleScroll);

  // ===== Mobile menu =====
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenuClose = document.getElementById("mobile-menu-close");
  const mobileMenu = document.getElementById("mobile-menu");

  mobileMenuButton.addEventListener("click", () => {
    mobileMenu.classList.add("active");
  });

  mobileMenuClose.addEventListener("click", () => {
    mobileMenu.classList.remove("active");
  });

  // Close mobile menu when clicking on a link
  const mobileNavLinks = mobileMenu.querySelectorAll("a");
  mobileNavLinks.forEach((link) => {
    link.addEventListener("click", () => {
      mobileMenu.classList.remove("active");
    });
  });

  // ===== Scroll reveal animation =====
  const revealElements = document.querySelectorAll(".reveal, .reveal-left, .reveal-right");

  function checkReveal() {
    const windowHeight = window.innerHeight;
    const revealPoint = 150;

    revealElements.forEach((element) => {
      const elementTop = element.getBoundingClientRect().top;

      if (elementTop &lt; windowHeight - revealPoint) {
        const delay = element.getAttribute("data-delay") || 0;
        setTimeout(() => {
          element.classList.add("active");
        }, delay);
      }
    });
  }

  window.addEventListener("scroll", checkReveal);
  window.addEventListener("resize", checkReveal);

  // Initial check
  checkReveal();

  
  .manual-carousel-container {
  margin: 2rem 0;
}

.manual-carousel {
  position: relative;
  overflow: hidden;
  border-radius: var(--radius);
}

.manual-carousel .carousel-track {
  display: flex;
  transition: transform 0.5s ease-in-out;
}

.manual-carousel .carousel-slide {
  flex: 0 0 100%;
  position: relative;
}

.manual-carousel .carousel-slide img {
  width: 100%;
  height: 300px;
  object-fit: cover;
}

@media (min-width: 768px) {
  .manual-carousel .carousel-slide img {
    height: 400px;
  }
}

@media (min-width: 1024px) {
  .manual-carousel .carousel-slide img {
    height: 500px;
  }
}

.manual-carousel .carousel-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.2);
  color: white;
  border: none;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
  z-index: 10;
}

.manual-carousel .carousel-button:hover {
  background-color: rgba(0, 0, 0, 0.4);
}

.manual-carousel .carousel-button.prev {
  left: 1rem;
}

.manual-carousel .carousel-button.next {
  right: 1rem;
}

.manual-carousel .carousel-indicators {
  position: absolute;
  bottom: 1rem;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  gap: 0.5rem;
}

.manual-carousel .indicator {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
}

.manual-carousel .indicator.active {
  background-color: white;
  width: 1rem;
}
  
  
/*   // ===== Auto carousel =====
  const carousel = document.querySelector(".auto-carousel");
  if (carousel) {
    const track = carousel.querySelector(".carousel-track");
    const slides = carousel.querySelectorAll(".carousel-slide");
    const prevButton = carousel.querySelector(".carousel-button.prev");
    const nextButton = carousel.querySelector(".carousel-button.next");
    const indicators = carousel.querySelectorAll(".indicator");

    let currentIndex = 0;
    let interval;
    let isPaused = false;

    // Set up the carousel
    function setupCarousel() {
      // Set the width of the track
      track.style.width = `${slides.length * 100}%`;

      // Set the width of each slide
      slides.forEach((slide) => {
        slide.style.width = `${100 / slides.length}%`;
      });
    }

    // Move to a specific slide
    function goToSlide(index) {
      currentIndex = index;
      track.style.transform = `translateX(-${currentIndex * (100 / slides.length)}%)`;

      // Update indicators
      indicators.forEach((indicator, i) => {
        if (i === currentIndex) {
          indicator.classList.add("active");
        } else {
          indicator.classList.remove("active");
        }
      });
    }

    // Next slide
    function nextSlide() {
      if (currentIndex === slides.length - 1) {
        goToSlide(0);
      } else {
        goToSlide(currentIndex + 1);
      }
    }

    // Previous slide
    function prevSlide() {
      if (currentIndex === 0) {
        goToSlide(slides.length - 1);
      } else {
        goToSlide(currentIndex - 1);
      }
    }

    // Start auto-advancing
    function startAutoAdvance() {
      interval = setInterval(() => {
        if (!isPaused) {
          nextSlide();
        }
      }, 4000);
    }

    // Reset interval
    function resetInterval() {
      clearInterval(interval);
      startAutoAdvance();
    }

    // Event listeners
    if (prevButton) {
      prevButton.addEventListener("click", () => {
        prevSlide();
        resetInterval();
      });
    }

    if (nextButton) {
      nextButton.addEventListener("click", () => {
        nextSlide();
        resetInterval();
      });
    }

    indicators.forEach((indicator, index) => {
      indicator.addEventListener("click", () => {
        goToSlide(index);
        resetInterval();
      });
    });

    // Pause on hover
    carousel.addEventListener("mouseenter", () => {
      isPaused = true;
    });

    carousel.addEventListener("mouseleave", () => {
      isPaused = false;
    });

    // Initialize
    setupCarousel();
    startAutoAdvance();
  } */

  // ===== Loading Animation =====
  const loadingOverlay = document.getElementById("loading-animation");
  const loadingPercentage = document.getElementById("loading-percentage");
  const progressCircle = document.querySelector(".progress");
  const leftDoor = document.querySelector(".left-door");
  const rightDoor = document.querySelector(".right-door");

  let progress = 0;

  // Simulate loading progress
  function simulateLoading() {
    const interval = setInterval(() => {
      progress += (100 - progress) / 10;

      if (progress >= 99) {
        clearInterval(interval);
        progress = 100;

        // Update UI
        updateLoadingUI();

        // Open doors
        setTimeout(() => {
          leftDoor.classList.add("open");
          rightDoor.classList.add("open");

          // Hide loading overlay
          setTimeout(() => {
            loadingOverlay.classList.add("hidden");
          }, 1500);
        }, 500);

        return;
      }

      // Update UI
      updateLoadingUI();
    }, 100);
  }

  // Update loading UI
  function updateLoadingUI() {
    // Update percentage text
    loadingPercentage.textContent = Math.round(progress);

    // Update progress circle
    const dashoffset = 283 - (283 * progress) / 100;
    progressCircle.style.strokeDashoffset = dashoffset;
  }

  // Start loading simulation
  simulateLoading();

  // ===== Lightbox =====
  const productCards = document.querySelectorAll(".product-card");
  const lightbox = document.getElementById("lightbox");
  const lightboxImage = document.getElementById("lightbox-image");
  const lightboxClose = document.querySelector(".lightbox-close");
  const lightboxPrev = document.querySelector(".lightbox-prev");
  const lightboxNext = document.querySelector(".lightbox-next");

  let currentImageIndex = 0;

  // Product images data
  const productImages = Array.from(productCards).map((card) => {
    const img = card.querySelector("img");
    return {
      src: img.src,
      alt: img.alt,
    };
  });

  // Open lightbox
  function openLightbox(index) {
    currentImageIndex = index;
    updateLightboxImage();
    lightbox.classList.add("active");
    document.body.style.overflow = "hidden";
  }

  // Close lightbox
  function closeLightbox() {
    lightbox.classList.remove("active");
    document.body.style.overflow = "";
  }

  // Update lightbox image
  function updateLightboxImage() {
    lightboxImage.src = productImages[currentImageIndex].src;
    lightboxImage.alt = productImages[currentImageIndex].alt;
  }

  // Previous image
  function prevImage() {
    currentImageIndex = currentImageIndex === 0 ? productImages.length - 1 : currentImageIndex - 1;
    updateLightboxImage();
  }

  // Next image
  function nextImage() {
    currentImageIndex = currentImageIndex === productImages.length - 1 ? 0 : currentImageIndex + 1;
    updateLightboxImage();
  }

  // Event listeners
  productCards.forEach((card, index) => {
    card.addEventListener("click", () => {
      openLightbox(index);
    });
  });

  if (lightboxClose) {
    lightboxClose.addEventListener("click", closeLightbox);
  }

  if (lightboxPrev) {
    lightboxPrev.addEventListener("click", (e) => {
      e.stopPropagation();
      prevImage();
    });
  }

  if (lightboxNext) {
    lightboxNext.addEventListener("click", (e) => {
      e.stopPropagation();
      nextImage();
    });
  }

  // Close on background click
  if (lightbox) {
    lightbox.addEventListener("click", (e) => {
      if (e.target === lightbox) {
        closeLightbox();
      }
    });
  }

  // Keyboard navigation
  document.addEventListener("keydown", (e) => {
    if (!lightbox || !lightbox.classList.contains("active")) return;

    if (e.key === "Escape") {
      closeLightbox();
    } else if (e.key === "ArrowLeft") {
      prevImage();
    } else if (e.key === "ArrowRight") {
      nextImage();
    }
  });

  // ===== Form submission =====
  window.submitForm = function(form) {
    // Get form data
    const formData = new FormData(form);
    const formValues = {};
    
    for (const [key, value] of formData.entries()) {
      formValues[key] = value;
    }
    
    // In a real implementation, you would send this data to a server
    // For now, we'll just show an alert
    alert('Form submitted successfully!\n\nNormally this would be sent to the server. Form data:\n' + 
          JSON.stringify(formValues, null, 2));
    
    // Reset the form
    form.reset();
    
    return false;
  };
});

